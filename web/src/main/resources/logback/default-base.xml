<?xml version="1.0" encoding="UTF-8"?><!--Base logback configuration provided for compatibility with Spring Boot 1.1--><included>    <timestamp key="TIMESTAMP" datePattern="yyyy-MM-dd"/>    <property name="LOGS_FOLDER" value="${LOGS_FOLDER:-logs}"/>    <property name="LOG_FILE_ALL" value="${LOGS_FOLDER}/all.log"/>    <property name="LOG_FILE_ERROR" value="${LOGS_FOLDER}/error.log"/>    <property name="LOG_FILE_API" value="${LOGS_FOLDER}/api.log"/>    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>    <!-- all 日志 -->    <!-- 过滤器，执行一个过滤器会有返回个枚举值，即DENY，NEUTRAL，ACCEPT其中之一。返回DENY，日志将立即被抛弃不再经过其他过滤器；返回NEUTRAL，有序列表里的下个过滤器过接着处理日志；返回ACCEPT，日志会被立即处理，不再经过剩余过滤器。过滤器被添加到 中，为 添加一个或多个过滤器后，可以用任意条件对日志进行过滤。 有多个过滤器时，按照配置顺序执行。下面是几个常用的过滤器：LevelFilter： 级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。有以下子节点：level:设置过滤级别onMatch:用于配置符合过滤条件的操作onMismatch:用于配置不符合过滤条件的操作例如：将过滤器的日志级别配置为ERROR，所有非ERROR级别的日志交给appender处理，ERROR级别的日志，被过滤掉。-->    <appender name="ALL-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">        <file>${LOG_FILE_ALL}</file>        <encoder>            <pattern>${FILE_LOG_PATTERN}</pattern>            <charset>UTF-8</charset>        </encoder>        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">            <fileNamePattern>${LOG_FILE_ALL}.%d{${FILE_NAME_DATE_PATTERN:-yyyy-MM-dd-HH}}.log</fileNamePattern>            <maxHistory>${LOG_FILE_MAX_HISTORY:-0}</maxHistory>        </rollingPolicy>        <filter class="ch.qos.logback.classic.filter.LevelFilter">            <level>ERROR</level>            <onMatch>DENY</onMatch>            <onMismatch>ACCEPT</onMismatch>        </filter>    </appender>    <!-- http 请求日志文件 -->    <appender name="API-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">        <file>${LOG_FILE_API}</file>        <encoder>            <pattern>${FILE_LOG_PATTERN}</pattern>            <charset>UTF-8</charset>        </encoder>        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">            <fileNamePattern>${LOG_FILE_API}.%d{${FILE_NAME_DATE_PATTERN:-yyyy-MM-dd-HH}}.log</fileNamePattern>            <maxHistory>${LOG_FILE_MAX_HISTORY:-0}</maxHistory>        </rollingPolicy>    </appender>    <!-- error 日志 -->    <appender name="ERROR-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">        <file>${LOG_FILE_ERROR}</file>        <encoder>            <pattern>${FILE_LOG_PATTERN}</pattern>            <charset>UTF-8</charset>        </encoder>        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">            <fileNamePattern>${LOG_FILE_ERROR}.%d{${FILE_NAME_DATE_PATTERN:-yyyy-MM-dd-HH}}.log</fileNamePattern>            <maxHistory>${LOG_FILE_MAX_HISTORY:-0}</maxHistory>        </rollingPolicy>        <!--例如：将过滤器的日志级别配置为ERROR，所有ERROR级别的日志交给appender处理，非ERROR级别的日志，被过滤掉。 -->        <filter class="ch.qos.logback.classic.filter.LevelFilter">            <level>ERROR</level>            <onMatch>ACCEPT</onMatch>            <onMismatch>DENY</onMismatch>        </filter>    </appender></included>